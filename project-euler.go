package main

import (
	"flag"
	"fmt"
)

func problem1() {
	message := []string{
		"Problem 1:",
		"If we list all the natural numbers below 10 that are multiples of 3 or 5,",
		"we get 3, 5, 6 and 9. The sum of these multiples is 23.",
		"Find the sum of all the multiples of 3 or 5 below 1000."}

	printBorderedMsg(message)

	sum := 0

	for i := 0; i < 1000; i++ {
		if i%3 == 0 || i%5 == 0 {
			sum += i
		}
	}

	fmt.Printf("Answer: %d\n", sum)
}

func problem2() {
	message := []string{
		"Problem 2:",
		"Each new term in the Fibonacci sequence is generated by adding the",
		"previous two terms. By starting with 1 and 2, the first 10 terms will be:",
		"1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...",
		"By considering the terms in the Fibonacci sequence whose values do not",
		"exceed four million, find the sum of the even-valued terms."}

	printBorderedMsg(message)

	sum := 0
	x, y := 1, 1

	for y < 4000000 {
		z := x + y

		if z < 4000000 && z%2 == 0 {
			sum += z
		}

		x = y
		y = z
	}

	fmt.Printf("Answer: %d\n", sum)
}

func main() {
	var message = []string{"Project Euler in Go"}
	printBorderedMsg(message)

	problemPtr := flag.String("problem", "error", "Specify a problem to execute (default: problem1)")

	flag.Parse()

	problem := *problemPtr

	switch problem {
	case "1":
		problem1()
	case "2":
		problem2()
	default:
		problem1()
	}
}
